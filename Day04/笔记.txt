1.顺序结构
	方法中代码是从上往下,从左往后执行的.
2.选择结构
	if:
		1.单分支
			格式:
				if(boolean表达式){
					语句体;
				}
			执行流程:
				首先先判断boolean表达式的值是true还是false
				如果是true,则执行语句体;
			使用场景:
				专门用于情况只有一种的时候
		2.双分支
			格式:
				if(boolean表达式){
					语句体1;
				}else{
					语句体2;
				}
			执行流程:
				首先先判断boolean表达式的值是true还是false
				如果是true,则执行语句体1;, 如果是false则执行语句体2
			使用场景:
				专门用于情况是二种的时候
			注意: if else 的功能比三元运算符的功能强大	
		3.多分支
			格式:
				if(boolean表达式1){
					语句体1;
				}else if(boolean表达式2){
					语句体2;
				}else if(boolean表达式3){
					语句体3;
				}
				
				
				if(boolean表达式1){
					语句体1;
				}else if(boolean表达式2){
					语句体2;
				}else if(boolean表达式3){
					语句体3;
				}else{
					语句体n;
				}
			执行流程:
				从上往下依次执行boolean表达式, 一旦boolean表达式返回true就执行对应的语句体,然后整个if语句结束.
				
			注意事项:
				有else一定会执行其中的一个语句体, 如果没有else可能一个语句体都不执行!!!!!
				
	
	switch:
		格式:
			switch(表达式){
				case 值1:
					break;
				case 值2:
					break;	
					...
				default:
					break;
			}
		执行流程:
			程序会拿表达式的值和 case中的值去匹配, 如果匹配成功, 执行对应的语句体, 遇到break结束;
		注意事项:
			1.表达式只能是 byte,short, int,char , 枚举, 字符串
			2.case中的值不能重复,否则会报错
			3.default语句可以放在switch的任何地方, 但是只有当所有的case都不配的时候, 才会执行default
			4.如果break忘记书写的话, 会出现case穿透, 程序会拿表达式的值和 case中的值去匹配, 如果匹配成功, 执行对应的语句体, 遇到break结束;
			  如果没有遇到break, 则执行接下来的所有的语句体, 直到遇到break或者switch的有大括号结束
		总结:
			switch的优点:
				效率高一点, 因为他是一次性将所有的选项加载到内存, 去比较
			switch的缺点:
				只能进行具体值得判断,没有办法进行区间的判断
			当我们有区间判断的时候建议使用if语句,如果不知道该用谁, 就选if
			
3.循环结构
	for:
		格式:		A        B 					C
			for(初始化语句; boolean表达式; 循环后的操作){
					D
				循环体;
			}
		流程:
			ABDC ---> BDC ---> BDC ---> BDC ---> BDC ....
			直到B返回false的时候, 循环结束
			
	while:
		格式:
				A
			初始化语句;	
							B
			while( boolean表达式){
					D
				循环体;
					C
				循环后的操作;
			}
		流程:
			ABDC ---> BDC ---> BDC ---> BDC ---> BDC ....
			直到B返回false的时候, 循环结束
	
	do while:(纯了解)
		格式:
			A
			初始化语句;	
			do{
				B
				循环体;
				C
				循环后的操作;	
					D
			}while(boolean表达式);
		执行流程:
			ABCD --->BCD --->BCD --->BCD --->BCD ,直到D返回false的时候停止
	
	总结三种循环的区别:
		dowhile:
			跟其他循环的执行流程不太一次样, 他先走循环体, 在判断条件, 所以不管条件是否成立, 至少执行一次
		for和while:
			for: 专门解决有确定循环次数的
			while:专门解决没有确定循环次数的
4.循环控制的关键字	
	break: 结束循环;
	continue: 结束当前循环,继续下一次循环;
	
	
	
	